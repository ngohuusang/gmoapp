<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
	       				http://www.springframework.org/schema/context/spring-context-3.0.xsd
	       				http://www.springframework.org/schema/tx
            			http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	       				http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring 
 						http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">

	<context:annotation-config />

	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- Data source -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close" lazy-init="true">
		<!-- Data connection -->
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- BoneCP configuration -->
		<property name="idleConnectionTestPeriodInMinutes" value="${boneCP.idleConnectionTestPeriodInMinutes}" />
		<property name="idleMaxAgeInMinutes" value="${boneCP.idleMaxAgeInMinutes}" />
		<property name="maxConnectionsPerPartition" value="${boneCP.maxConnectionsPerPartition}" />
		<property name="minConnectionsPerPartition" value="${boneCP.minConnectionsPerPartition}" />
		<property name="partitionCount" value="${boneCP.partitionCount}" />
		<property name="acquireIncrement" value="${boneCP.acquireIncrement}" />
		<property name="statementsCacheSize" value="${boneCP.statementsCacheSize}" />
		<property name="releaseHelperThreads" value="${boneCP.releaseHelperThreads}" />
	</bean>
	<!-- End data source -->

	<!-- Hibernate config -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.showSQL}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generateStatistics}</prop>
				<prop key="hibernate.connection.autocommit">${connection.autocommit}</prop>
				<prop key="hibernate.transaction.flush_before_completion">${transaction.flushBeforeCompletion}</prop>
				<prop key="hibernate.transaction.auto_close_session">${transaction.autoCloseSession}</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
<!-- 				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.useQueryCache}</prop> -->
<!-- 				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.useSecondLevelCache}</prop> -->
<!-- 				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.factory}</prop> -->
				
				
				<!-- <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop> -->
				<!-- <prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.cache.config}</prop> -->
				
<!-- 				<prop key="net.sf.ehcache.configurationResourceName">${hibernate.cache.config}</prop> -->

				<prop key="hibernate.search.default.directory_provider">${search.default.directory_provider}</prop>
				<prop key="hibernate.search.default.indexBase">${search.default.indexBase}</prop>

				<!-- Set index for each table -->
				<!-- <prop key="hibernate.search.Users.directory_provider">${search.User.directory_provider}</prop> -->
			</props>
		</property>

		<property name="annotatedClasses">
			<list>
				<value>vn.gmostore.basic.model.User</value>
				<value>vn.gmostore.basic.model.StatusHistory</value>
				<value>vn.gmostore.basic.model.Category</value>
				<value>vn.gmostore.basic.model.Platform</value>
				<value>vn.gmostore.basic.model.Publisher</value>
				<value>vn.gmostore.basic.model.Product</value>
				<value>vn.gmostore.basic.model.Version</value>
				<value>vn.gmostore.basic.model.Rating</value>
				<value>vn.gmostore.basic.model.Comment</value>
				<value>vn.gmostore.basic.model.Promotion</value>
				<value>vn.gmostore.basic.model.ListType</value>
				<value>vn.gmostore.basic.model.DeviceInfo</value>
				<value>vn.gmostore.basic.model.UserDevice</value>
				<value>vn.gmostore.basic.model.HistoryTransaction</value>
				<value>vn.gmostore.basic.model.ScreenShot</value>
				<value>vn.gmostore.basic.model.Sns</value>
				<value>vn.gmostore.basic.model.PaymentMethod</value>
				<value>vn.gmostore.basic.model.HistoryRecharge</value>
				<value>vn.gmostore.basic.model.UserAction</value>
				<value>vn.gmostore.basic.model.HistoryAction</value>
				<value>vn.gmostore.basic.model.WishList</value>
				<value>vn.gmostore.basic.model.Price</value>
				<value>vn.gmostore.basic.model.Contact</value>
				<value>vn.gmostore.basic.model.SnsFriendList</value>
				<value>vn.gmostore.basic.model.DownloadLink</value>
				<value>vn.gmostore.basic.model.ListTypeHasProductId</value>
				<value>vn.gmostore.basic.model.ListTypeHasProduct</value>
			</list>
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- End hibernate config -->
</beans>
