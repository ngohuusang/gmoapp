package vn.gmostore.basic.model;

// default package
// Generated Oct 27, 2013 8:20:49 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.search.annotations.Indexed;

import com.gwtplatform.dispatch.shared.Result;

/**
 * Rating generated by hbm2java
 */
@Entity
@Table(name = "rating", catalog = "gmostore_db")
@Indexed(index = "Ratings")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
public class Rating extends AbstractDomain<Integer> implements Result {

    /**
     * 
     */
    private static final long serialVersionUID = 1L;
    private Integer id;
    private User user;
    private Product product;
    private int point;
    private Long ratedDate;
    private int mark;

    public Rating() {
    }

    public Rating(User user, Product product, int point, int mark) {
        this.user = user;
        this.product = product;
        this.point = point;
        this.mark = mark;
    }

    public Rating(User user, Product product, int point, Long ratedDate, int mark) {
        this.user = user;
        this.product = product;
        this.point = point;
        this.ratedDate = ratedDate;
        this.mark = mark;
    }

    @Override
    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id", nullable = false)
    public User getUser() {
        return this.user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "product_id", nullable = false)
    public Product getProduct() {
        return this.product;
    }

    public void setProduct(Product product) {
        this.product = product;
    }

    @Column(name = "point", nullable = false)
    public int getPoint() {
        return this.point;
    }

    public void setPoint(int point) {
        this.point = point;
    }

    @Column(name = "rated_date")
    public Long getRatedDate() {
        return this.ratedDate;
    }

    public void setRatedDate(Long ratedDate) {
        this.ratedDate = ratedDate;
    }

    @Column(name = "mark", nullable = false)
    public int getMark() {
        return this.mark;
    }

    public void setMark(int mark) {
        this.mark = mark;
    }

}
